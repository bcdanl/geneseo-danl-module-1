---
title: Homework 6
subtitle: Advanced Group Oeprations
date: 2024-03-12
execute: 
  echo: true
  eval: false
  warning: false
  message: false
from: markdown+emoji
comments: false
---

```{r}
#| echo: false

reticulate::use_condaenv("/Users/bchoe/anaconda3", required = TRUE)
```

# Direction

- Please submit your Jupyter Notebook for Homework 6 to the Brightspace with the name below:

  - `danl-m1-hw6-LASTNAME-FIRSTNAME.ipynb`\
  ( e.g., `danl-m1-hw6-choe-byeonghak.ipynb` )

- The due is March 19, 2024, 7:00 P.M.

- Please send Byeong-Hak an email (`bchoe@geneseo.edu`) if you have any questions.

-   Please prepare a Jupyter/Python Notebook (`*.ipynb`) to address all questions.

-   Make at least some simple comment (`# ...`) in each question.

-   Make one text cell to explain things in each question.

-   Import Python libraries you need here.

```{python}
import pandas as pd
```

<br><br><br>




<br>

<p align="center">
  <img src="https://bcdanl.github.io/lec_figs/unfccc-cf.png" width="900px">
</p>

<br>


Load the DataFrame for Part 1.

```{python}
#| echo: true
path = 'https://bcdanl.github.io/data/climate_finance.csv'
climate_finance = pd.read_csv(path)
```


```{r}
#| echo: false
#| eval: true
#| results: asis
rmarkdown::paged_table(readr::read_csv('https://bcdanl.github.io/data/climate_finance.csv'))
                       
```


- Climate finance refers to local, national or transnational financing—drawn from public, private and alternative sources of financing—that seeks to support mitigation and adaptation actions that will address climate change ([https://unfccc.int/topics/introduction-to-climate-finance](https://unfccc.int/topics/introduction-to-climate-finance)).

  - Mitigation involves taking actions to reduce the emissions of greenhouse gases that are responsible for climate change.
  - Adaptation involves taking actions to reduce the actual or expected damages from climate change ([https://climate.nasa.gov/solutions/adaptation-mitigation](https://climate.nasa.gov/solutions/adaptation-mitigation)).


- A unit of observation in `climate_finance` DataFrame is a climate change project.

<br>

## Variable Description

- `Party`: a party (country) that provides a funding contribution to recipient country/region for their cliamte change project.

- `Recipient country/region`:  Recipient country or region

- `Project/programme/activity`:  Details in the climate change project

- `Type of support`:  
  - `adaptation` if the climate change project is related to adaptation project.
  - `mitigation` if the climate change project is related to mitigation project.
  
- `Year`: Year that funding contribution is committed or provided.

- `Contribution`: An amount of funding contribution for the climate change project (in USD).

- `Status`: 
  - `committed` if a party commits to providing the funding contribution for the climate change project, but the funding contribution is NOT actually provided.
  - `provided` if the funding contribution was provided for the climate change project.
  
- `Energy`: 
  - `TRUE` if the project is energy-related; 
  - `FALSE` otherwise.

<br>

## Question 1
For each `party`, calculate the total funding `contributions` that were `disbursed` or `provided` for `mitigation` projects for each `year`.

*Answer*:

```{python}

```

<br><br>

## Question 2
How many `parties` have `provided` positive funding `contributions` to other countries or regions for their `adaptation` projects for every single `year` from 2011 to 2018?


*Answer*:

```{python}

```

<br><br>



# Part 2



<br>

<p align="center">
  <img src="https://bcdanl.github.io/lec_figs/stocks.png" width="600px">
</p>

<br>

Consider the `stock` DataFrame for Part 2.

```{python}
path = 'https://bcdanl.github.io/data/stock_2019_2024.csv'
stock = pd.read_csv(path)
```



```{r}
#| echo: false
#| eval: true
#| results: asis
rmarkdown::paged_table(readr::read_csv('https://bcdanl.github.io/data/stocks2013_2023.csv'))
                       
```


## Question 3

What are the minimum, first quartile, median, thrid quartile, maximum, mean, and standard deviation of `Close` and `Volume` for each `company`?

- *Hint*: `describe()` is available for `DataFrameGroupBy`.


*Answer*:
```{python}

```

<br>

## Question 4

Find the 10 largest values for `Volume` for each `company` using a lambda function. 

*Answer*:
```{python}

```

<br>

## Question 5

- Calculate the Z-score of `Close` for each `company` on `Date`.
  - The formula for the Z-score of `Close` for each `company` on `Date` $t$ is as follows:
  
$$
z_{t} = \frac{\text{Close}_{t} - \text{mean}(\text{Close}_{t})}{\text{std}(\text{Close}_{t})},
$$

where

  - $\text{Close}_{t}$ is a company's `Close` price on date `t`;
  - $\text{mean}(\text{Close}_{t})$ is the mean value of `Close` for a company;
  - $\text{std}(\text{Close}_{t})$ is the standard deviation of `Close` for a company.


*Answer*:
```{python}

```

<br>

## Question 6

- Use the `transform()` method on the `stock` data to represent all the values of `Open`, `High`, `Low`, `Close`, `Adj Close`, and `Volume` in terms of the first date in the data.

- To do so, divide all values for each company by the values of the first date in the data for that company.

*Answer*:
```{python}

```

<br>

<br><br>
